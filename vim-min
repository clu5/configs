" nocompatible -- changes several non-Vi compatible features
set nocp

" digraph -- type special characters by using CTRL-K (see `:h dig`)
set digraph

" esckeys -- enable movement with arrow keys
set ek

" hidden -- allow hiding of unsaved, modified buffers
set hid

" ruler -- show current cursor position
set ru

" showcmd -- show input of incomplete command
set sc

" visualbell -- no beeping
set vb

" wildmenu -- show possible completeions of commmands
set wmnu

" noerrorbells -- turn off bell
set noeb

" noexpandtab -- no expansion of tabs into spaces
set noet

" nostartofline -- prevent cursor from changing current column when jumping
set nosol

" autoindent -- automatic indentation
set ai

" backspace -- allow backspace character to move cursor
set bs=2

" formatoptions -- The formatoptions affect the built-in "text formatting" command. The default value omits the "flag" 'r' which makes Vim insert a "comment leader" of the line when starting a new one. This allows to add text to a comment and still be within the comment after you start a new line. It also allows to break the line within a comment without breaking the comment.
set fo=cqrt

" laststatus -- show status line even when only one window is shown
set ls=2

" shortmess -- shortens message to avoid scrolling
set shm=at

" textwidth -- This explicitly sets the width of text to 72 characters. After each completion of a word in insert mode Vim checks whether its end is past this width; if so then it will break the word onto the next line.
set tw=72

" whichwrap -- There are several commands which move the cursor within the line. When you get to the start/end of a line then these commands will fail as you cannot go on. However, many users expect the cursor to be moved onto the previous/next line. Vim allows you to chose which commands will "wrap" the cursor around the line borders.
set ww=<,>,h,l

" comments -- Vim can reformat text and preserve comments (commented lines) even when several kinds of comment indentation "nest" within.
set com=b:#,:%,n:>

" list characters -- show end-of-line and tab characters
set list
set lcs=tab:»·
set lcs+=trail:·

" viminfo -- save info to file to search previous command history
set vi=%,'50
set vi+=\"100,:100
set vi=n~/.viminfo


set undodir=~/.vim/undodir
set undofile
